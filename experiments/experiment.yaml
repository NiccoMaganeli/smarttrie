---
- name: Gather local time
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: gather local time
      shell: "date +%Y%m%dT%H%M%S"
      register: localtime
      tags:
        - deploy
        - config
        - run
        - server
        - load
        - benchmark
        - cleanup
        - fetch

- name: Gather general facts
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  vars:
    - experiment_name: "{{ hostvars['localhost']['localtime'].stdout }}"
  tasks:
    - name: gather custom facts
      set_fact:
        experiment_path: "/tmp/SmartTrie"
        run_cmd: "java -server -cp dist/SmartTrie.jar"
        experiment_result_path: "./results/{{ experiment_name }}"
      tags:
        - deploy
        - config
        - run
        - server
        - load
        - benchmark
        - cleanup
        - fetch

- name: Deploy SmartTrie
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: ensure experiment path
      file:
        path: "{{ experiment_path }}"
        state: directory
      tags:
        - deploy
        - config
    - name: deploy config
      copy:
        src: ./config/
        dest: "{{ experiment_path }}/config/"
      when: not ansible_check_mode
      tags:
        - deploy
        - config
    - name: ensure no currentView file
      file:
        path: "{{ experiment_path }}/config/currentView"
        state: absent
      tags:
        - deploy
    - name: ensure dist path
      file:
        path: "{{ experiment_path }}/dist"
        state: directory
      tags:
        - deploy
    - name: deploy jar
      copy:
        src: ../dist/SmartTrie.jar
        dest: "{{ experiment_path }}/dist/SmartTrie.jar"
      when: not ansible_check_mode
      tags:
        - deploy

- name: Run server
  hosts: server
  gather_facts: false
  any_errors_fatal: true
  vars:
    - state: "tree-map"
  tasks:
    - name: ensure no old files
      file:
        path: "{{ experiment_path }}/files"
        state: absent
      when: keep_files is not defined
      tags:
        - run
        - server
    - name: ensure no old logs
      file:
        path: "{{ experiment_path }}/logs"
        state: absent
      tags:
        - run
        - server
    - name: ensure required folders
      file:
        path: "{{ experiment_path }}/{{ item }}"
        state: directory
      with_items:
        - files
        - logs
      tags:
        - run
        - server
    - name: run server
      shell:
        chdir: "{{ experiment_path }}"
          #cmd: "{{ run_cmd }} -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:StartFlightRecording=filename=recording.jfr,maxsize=1024m,maxage=1d,settings=profile,dumponexit=true -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+UseCompressedOops -XX:+UseStringDeduplication -XX:InitialHeapSize=2G -XX:MaxHeapSize=8G -Xlog:gc=debug:file=logs/gc.log:time smarttrie.app.server.Server 0 {{ state }}"
        cmd: "{{ run_cmd }} -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+UseCompressedOops -XX:+UseStringDeduplication -XX:InitialHeapSize=2G -XX:MaxHeapSize=16G -Xlog:gc=debug:file=logs/gc.log:time smarttrie.app.server.Server 0 {{ state }}"
      async: 10800 # 3h
      poll: 0
      when: not ansible_check_mode
      tags:
        - run
        - server

- name: Run client
  hosts: client
  gather_facts: false
  any_errors_fatal: true
  vars:
    - threads: 64
  tasks:
    - name: ensure logs folder
      file:
        path: "{{ experiment_path }}/logs"
        state: directory
      tags:
        - run
        - load
        - benchmark
    - name: load data
      shell:
        chdir: "{{ experiment_path }}"
        cmd: "{{ run_cmd }} -Xms2G -Xmx4G site.ycsb.Client -load -s -db smarttrie.app.client.Client -threads {{ threads }} -P config/workload 2>&1 | tee logs/load.log"
      async: 10800 # 3h
      poll: 10
      when: not ansible_check_mode
      tags:
        - run
        - load
    - name: warm-up run
      shell:
        chdir: "{{ experiment_path }}"
        cmd: "{{ run_cmd }} -Xms2G -Xmx4G site.ycsb.Client -t -s -db smarttrie.app.client.Client -threads {{ threads }} -P config/workload -p operationcount=1000000 2>&1 | tee logs/warmup.log"
      async: 10800 # 3h
      poll: 10
      when: not ansible_check_mode
      tags:
        - run
        - benchmark
    - name: benchmark run
      shell:
        chdir: "{{ experiment_path }}"
        cmd: "{{ run_cmd }} -Xms2G -Xmx4G site.ycsb.Client -t -s -db smarttrie.app.client.Client -threads {{ threads }} -P config/workload 2>&1 | tee logs/benchmark.log"
      async: 10800 # 3h
      poll: 10
      when: not ansible_check_mode
      tags:
        - run
        - benchmark

- name: Fetch logs
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: clean up old benchmark results
      run_once: true
      local_action:
        module: file
        path: "{{ experiment_result_path }}"
        state: absent
      tags:
        - run
        - load
        - benchmark
        - fetch
    - name: ensure results folder
      run_once: true
      local_action:
        module: file
        path: "{{ experiment_result_path }}"
        state: directory
      tags:
        - run
        - load
        - benchmark
        - fetch
    - name: fetch client results
      fetch:
        src: "{{ experiment_path }}/logs/{{ item }}"
        dest: "{{ experiment_result_path }}"
        fail_on_missing: no
      with_items:
        - load.log
        - warmup.log
        - benchmark.log
      tags:
        - run
        - load
        - benchmark
        - fetch
    - name: fetch server logs
      fetch:
        src: "{{ experiment_path }}/logs/{{ item }}"
        dest: "{{ experiment_result_path }}"
        fail_on_missing: no
      with_items:
        - app.log
        - gc.log
      tags:
        - run
        - load
        - benchmark
        - fetch

- name: Stop running processes
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: get java pids
      shell:
        cmd: "jps -lm | grep 'smarttrie' | awk '{print $1}'"
      register: java_pids
      when: not ansible_check_mode
      tags:
        - stop
    - name: kill running processes
      shell:
        cmd: "kill {{ item }}"
      with_items: "{{ java_pids.stdout_lines }}"
      when: not ansible_check_mode
      register: kill_result
      failed_when: "kill_result.rc != 0 and 'No such process' not in kill_result.stderr"
      tags:
        - stop

- name: Cleanup hosts
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: clean up {{ experiment_path }}
      file:
        path: "{{ experiment_path }}"
        state: absent
      tags:
        - cleanup
